{"remainingRequest":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!/Users/tql_yy/Documents/code/use_one/src/views/mine/safty/reset_password.vue?vue&type=style&index=0&id=dec2f2e2&lang=scss&scoped=true&","dependencies":[{"path":"/Users/tql_yy/Documents/code/use_one/src/views/mine/safty/reset_password.vue","mtime":1657679670859},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":1655715156000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5yZXNldC1jb250ZW50ewogICAgcGFkZGluZzogMCAxMnB4OwogICAgaDN7CiAgICAgICAgZm9udC1zaXplOiAyMnB4OwogICAgICAgIGNvbG9yOiAjMzMzOwogICAgICAgIGZvbnQtZmFtaWx5OiA1MDA7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogNDRweDsKICAgICAgICBtYXJnaW4tdG9wOiAxMHB4OwogICAgfQogICAgL2RlZXAvIC5lbC1mb3JtLWl0ZW17CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsKICAgIH0KfQogICAgCg=="},{"version":3,"sources":["reset_password.vue"],"names":[],"mappings":";AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"reset_password.vue","sourceRoot":"src/views/mine/safty","sourcesContent":["<!-- 重置密码 -->\n<template>\n  <div class=\"reset-password\">\n    <Navigation/>\n    <div class=\"reset-content\">\n        <h3>登录密码</h3>\n        <el-form :model=\"ruleForm\" ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\">\n            <el-form-item prop=\"pass_before\">\n                <P-input title=\"原密码\" :show-password=\"true\" v-model=\"ruleForm.pass_before\" placeholder=\"请输入原密码\"></P-input>\n            </el-form-item>\n            <el-form-item prop=\"pass_new\">\n                <P-input title=\"新密码\" :show-password=\"true\" v-model=\"ruleForm.pass_new\" placeholder=\"请输入新密码\"></P-input>\n            </el-form-item>\n            <el-form-item prop=\"pass_verify\">\n                <P-input title=\"验证密码\" :show-password=\"true\" v-model=\"ruleForm.pass_verify\" placeholder=\"请再次输入新密码\"></P-input>\n            </el-form-item>\n        </el-form>\n        <P-button type=\"primary\" class=\"btn-primary h-44-i m-60-t-i\" @click=\"submitReset('ruleForm')\">提交</P-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n    data(){\n        const verify_fn = (rule,value,callback) => {\n            if(!value){\n                callback(new Error('请再次输入新密码'))\n            }else if(value !== this.ruleForm.pass_new){\n                callback(new Error('两次输入密码不一致'))\n            }else{\n                callback()\n            }\n        }\n        return{\n            ruleForm:{\n                pass_before:'',\n                pass_new:'',\n                pass_verify:'',\n            },\n            rules:{\n                pass_before: [\n                    { required: true, message: this.$t('请输入原密码'), trigger: 'blur' },\n                    { min: 8, max: 12, message: this.$t('长度在8到12个字符'), trigger: 'blur' },\n                    { validator: new RegExp().pass_before, trigger: 'blur' }\n                ],\n                pass_new: [\n                    { required: true, message: this.$t('请输入新密码'), trigger: 'blur' },\n                    { min: 8, max: 12, message: this.$t('长度在8到12个字符'), trigger: 'blur' },\n                    { validator: new RegExp().pass_new, trigger: 'blur' }\n                ],\n                pass_verify: [\n                    { required: true, message: this.$t('请再次输入新密码'), trigger: 'blur' },\n                    { min: 8, max: 12, message: this.$t('长度在8到12个字符'), trigger: 'blur' },\n                    { validator: verify_fn, trigger: 'blur' }\n                ]\n            }\n        }\n    },  \n    components:{\n        Navigation: resolve => require(['../../../components/nav/Navigation'],resolve)\n    },\n    methods:{\n        submitReset(formName) {\n            this.$refs[formName].validate((res) => {\n                if (res) {\n                    console.log('验证通过')\n                }\n            });\n        },\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.reset-content{\n    padding: 0 12px;\n    h3{\n        font-size: 22px;\n        color: #333;\n        font-family: 500;\n        margin-bottom: 44px;\n        margin-top: 10px;\n    }\n    /deep/ .el-form-item{\n        margin-bottom: 0;\n    }\n}\n    \n</style>"]}]}