{"remainingRequest":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!/Users/tql_yy/Documents/code/use_one/src/views/mine/safty/email_auth.vue?vue&type=style&index=0&id=40e8c16f&lang=less&scoped=true&","dependencies":[{"path":"/Users/tql_yy/Documents/code/use_one/src/views/mine/safty/email_auth.vue","mtime":1658285989774},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":1655715156000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js","mtime":1657523213663},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgdXJsKCIuL2luZGV4Lmxlc3MiKTsKLmF1dGgtYmVmb3JlIHsKICBoMyB7CiAgICBtYXJnaW4tYm90dG9tOiAwOwogIH0KfQouYXV0aC1yZW1hcmsgewogIGZvbnQtc2l6ZTogMTJweDsKICBjb2xvcjogIzk5OTsKICBtYXJnaW4tdG9wOiA0cHg7CiAgbWFyZ2luLWJvdHRvbTogMzhweDsKfQo="},{"version":3,"sources":["email_auth.vue"],"names":[],"mappings":";AA8LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"email_auth.vue","sourceRoot":"src/views/mine/safty","sourcesContent":["<!-- 邮箱认证 -->\n<template>\n  <div class=\"email-auth\">\n    <Navigation />\n    <div class=\"auth-content auth-before\" v-if=\"beforeAuth == 1\">\n      <h3>密码验证</h3>\n      <p class=\"auth-remark\">为保护您的账号安全，需要登录密码进行验证</p>\n      <el-form\n        ref=\"check\"\n        :rules=\"authFormRule\"\n        :model=\"authForm\"\n        label-position=\"top\"\n      >\n        <el-form-item prop=\"password\">\n          <P-input\n            title=\"登录密码\"\n            v-model=\"authForm.password\"\n            placeholder=\"请输入登录密码\"\n            :show-password=\"true\"\n          ></P-input>\n        </el-form-item>\n      </el-form>\n      <P-button\n        style=\"margin-top: 40px\"\n        type=\"primary\"\n        class=\"btn-primary\"\n        @click=\"checkPass('check')\"\n        >下一步</P-button\n      >\n    </div>\n    <div class=\"auth-content\" v-else>\n      <h3>邮箱{{ current.account.email ? \"修改\" : \"认证\" }}</h3>\n      <el-form :model=\"form\" ref=\"form\" :rules=\"ruleForm\" label-position=\"top\">\n        <el-form-item prop=\"email\">\n          <P-input\n            title=\"邮箱地址\"\n            v-model=\"form.email\"\n            placeholder=\"请输入邮箱地址\"\n          ></P-input>\n        </el-form-item>\n        <el-form-item prop=\"code\">\n          <P-input\n            title=\"验证码\"\n            v-model=\"form.code\"\n            placeholder=\"请输入验证码\"\n          >\n          </P-input>\n          <p class=\"send-code-text\" v-if=\"count == 0\" @click=\"sendCode\">\n            {{ $t(\"获取验证码\") }}\n          </p>\n          <B-data-theCountdown v-model=\"count\" v-else\n            >{{ count }} {{ $t(\"秒后重新获取\") }}</B-data-theCountdown\n          >\n        </el-form-item>\n      </el-form>\n      <P-button\n        type=\"primary\"\n        class=\"btn-primary h-44-i m-60-t-i\"\n        @click=\"submitEmail('form')\"\n        >提交</P-button\n      >\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport { checkEmail } from \"../../../utils/index\";\nimport { CheckPass, SendCode, BindEmail } from \"../../../api/api\";\nexport default {\n  data() {\n    const verify_email = (rule, value, callback) => {\n      if (!checkEmail(value)) {\n        callback(new Error(\"请输入正确的邮箱格式\"));\n      } else {\n        callback();\n      }\n    };\n    const verify_code = (rule, value, callback) => {\n      if (value.length != 6) {\n        callback(new Error(\"请输入6位验证码\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      beforeAuth: 1, // 1 - 未验证 2 - 已验证\n      emailCode: \"\", //邮箱验证码\n      authForm: {\n        password: \"\",\n      },\n      authFormRule: {\n        password: [\n          {\n            required: true,\n            message: this.$t(\"请输入登录密码\"),\n            trigger: \"blur\",\n          },\n        ],\n      },\n      form: {\n        email: \"\",\n        code: \"\",\n      },\n      ruleForm: {\n        email: [\n          {\n            required: true,\n            message: this.$t(\"请输入邮箱地址\"),\n            trigger: \"blur\",\n          },\n          { validator: verify_email, trigger: \"blur\" },\n        ],\n        code: [\n          { required: true, message: this.$t(\"请输入验证码\"), trigger: \"blur\" },\n          { validator: verify_code, trigger: \"blur\" },\n        ],\n      },\n      count: 0,\n    };\n  },\n  components: {\n    Navigation: (resolve) =>\n      require([\"../../../components/nav/Navigation\"], resolve),\n  },\n  computed: {\n    ...mapState([\"current\"]),\n  },\n  methods: {\n    checkPass(formName) {\n      this.$refs[formName].validate(async (res) => {\n        if (res) {\n          const result = await CheckPass({ password: this.authForm.password });\n          const { code } = result;\n          if (code != 200) {\n            this.$toast(result.message);\n            return;\n          }\n          this.$toast.loading({\n            message: \"加载中...\",\n            forbidClick: true,\n          });\n          this.beforeAuth = 2;\n        }\n      });\n    },\n    //发送验证码\n    async sendCode() {\n      if (!this.form.email) {\n        this.$toast(\"请输入邮箱地址\");\n        return;\n      } else if (!checkEmail(this.form.email)) {\n        this.$toast(\"请输入正确的邮箱地址\");\n        return;\n      } else {\n        const params = {\n          scene: 3,\n          type: 2,\n          email: this.form.email,\n        };\n        const result = await SendCode(params);\n        this.count = 60;\n        this.$toast.success(\"验证码发送成功\");\n        this.emailCode = result.data.code;\n      }\n    },\n    //提交邮箱绑定\n    submitEmail(formName) {\n      this.$refs[formName].validate(async (res) => {\n        if (res) {\n          const params = {\n            email: this.form.email,\n            password: this.authForm.password,\n            code: this.form.code,\n          };\n          const result = await BindEmail(params);\n          const { code } = result;\n          if (code == 200) {\n            this.$toast.success(\"认证成功\");\n            this.$store.dispatch(\"current/upUserInfo\");\n            this.$router.go(-1);\n          }\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n@import url(\"./index.less\");\n.auth-before {\n  h3 {\n    margin-bottom: 0;\n  }\n}\n.auth-remark {\n  font-size: 12px;\n  color: #999;\n  margin-top: 4px;\n  margin-bottom: 38px;\n}\n</style>"]}]}