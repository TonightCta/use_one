{"remainingRequest":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!/Users/tql_yy/Documents/code/use_one/src/views/mine/safty/trade_auth.vue?vue&type=style&index=0&id=e205c6b2&lang=less&scoped=true&","dependencies":[{"path":"/Users/tql_yy/Documents/code/use_one/src/views/mine/safty/trade_auth.vue","mtime":1658285568629},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":1655715156000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js","mtime":1657523213663},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmgzIHsKICBmb250LXNpemU6IDIycHg7CiAgY29sb3I6ICMzMzM7CiAgZm9udC13ZWlnaHQ6IDUwMDsKfQouYmVmb3JlLXJlbWFyayB7CiAgZm9udC1zaXplOiAxMnB4OwogIGNvbG9yOiAjOTk5OwogIG1hcmdpbi10b3A6IDhweDsKICBtYXJnaW4tYm90dG9tOiA0MHB4Owp9Ci50cmFkZS1iZWZvcmUtYXV0aCB7CiAgcGFkZGluZzogMzBweCAxMnB4OwoKICAuc2VuZC1jb2RlIHsKICAgIHRleHQtYWxpZ246IHJpZ2h0OwogICAgbWFyZ2luLXRvcDogMTRweDsKICAgIGZvbnQtc2l6ZTogMTRweDsKICB9CiAgLnVuLXNlbmQgewogICAgY29sb3I6ICMyY2JjOTQ7CiAgfQp9Ci5zZXQtdHJhZGUtcGFzc3dvcmQgewogIHBhZGRpbmc6IDMwcHggMTJweDsKICAvZGVlcC8uZWwtZm9ybS1pdGVtIHsKICAgIG1hcmdpbi1ib3R0b206IDRweDsKICB9CiAgLnRyYWRlLXJlbWFyay1ib3ggewogICAgcGFkZGluZzogMTJweDsKICAgIGJhY2tncm91bmQ6ICNlZWU7CiAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICBtYXJnaW4tdG9wOiAyMnB4OwogICAgdWwgewogICAgICBsaSB7CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICAgIC5yZW1hcmstcG9pbnQgewogICAgICAgICAgbWluLXdpZHRoOiA1cHg7CiAgICAgICAgICBoZWlnaHQ6IDVweDsKICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKICAgICAgICAgIGJhY2tncm91bmQ6ICM5OTk7CiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDhweDsKICAgICAgICB9CiAgICAgICAgcDpsYXN0LWNoaWxkIHsKICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsKICAgICAgICAgIGNvbG9yOiAjOTk5OwogICAgICAgIH0KICAgICAgfQogICAgICBsaTpsYXN0LWNoaWxkIHsKICAgICAgICBtYXJnaW4tdG9wOiAxMnB4OwogICAgICB9CiAgICB9CiAgfQogIC5idG4tcHJpbWFyeSB7CiAgICBtYXJnaW4tdG9wOiAyMnB4OwogIH0KfQo="},{"version":3,"sources":["trade_auth.vue"],"names":[],"mappings":";AAqNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"trade_auth.vue","sourceRoot":"src/views/mine/safty","sourcesContent":["<template>\n  <div class=\"trade-auth\">\n    <Navigation />\n    <!-- 前置验证 -->\n    <div class=\"trade-before-auth\" v-if=\"status == 0\">\n      <h3>{{ current.account.type == 1 ? \"手机\" : \"邮箱\" }}验证码</h3>\n      <p class=\"before-remark\">为保护您的账号安全，需要登录密码进行验证</p>\n      <P-verification v-model=\"valBefore\" />\n      <p v-if=\"count == 0\" @click=\"sendAuthCode()\" class=\"send-code un-send\">\n        获取验证码\n      </p>\n      <B-data-theCountdown v-model=\"count\" v-else class=\"send-code\"\n        >{{ count }} {{ $t(\"秒后重新获取\") }}</B-data-theCountdown\n      >\n    </div>\n    <div class=\"set-trade-password\" v-else>\n      <h3>\n        {{\n          current.account.security.pay_password == 1 ? \"修改\" : \"设置\"\n        }}交易密码\n      </h3>\n      <p class=\"before-remark\">8-12位大写、小写英文字母及数字组合</p>\n      <div class=\"form-box\">\n        <el-form\n          ref=\"form\"\n          :model=\"form\"\n          :rules=\"ruleForm\"\n          label-position=\"top\"\n        >\n          <el-form-item prop=\"password\">\n            <P-input\n              title=\"交易密码\"\n              v-model=\"form.password\"\n              :show-password=\"true\"\n              placeholder=\"请输入交易密码\"\n            ></P-input>\n          </el-form-item>\n          <el-form-item prop=\"repeat\">\n            <P-input\n              v-model=\"form.repeat\"\n              title=\"确认密码\"\n              :show-password=\"true\"\n              placeholder=\"请再次输入交易密码\"\n            ></P-input>\n          </el-form-item>\n        </el-form>\n        <!-- 交易密码说明 -->\n        <div class=\"trade-remark-box\">\n          <ul>\n            <li v-for=\"(remark, index) in remarkList\" :key=\"`${index}-remark`\">\n              <p class=\"remark-point\"></p>\n              <p>{{ remark }}</p>\n            </li>\n          </ul>\n        </div>\n        <P-button type=\"primary\" class=\"btn-primary\" @click=\"submitSet('form')\"\n          >立即设置</P-button\n        >\n      </div>\n    </div>\n    <Alert\n      svg=\"\"\n      type=\"typography\"\n      title=\"提示\"\n      v-model=\"isBindPhone\"\n      @cancel=\"$router.go(-1)\"\n      @click=\"$router.push('/auth-phone')\"\n    >\n      <p>设置交易密码前需要手机认证</p>\n    </Alert>\n  </div>\n</template>\n\n<script>\nimport { Toast } from \"vant\";\nimport { checkPassword } from \"../../../utils/index\";\nimport { SendCode, VerifyCode, SetTradePass } from \"../../../api/api\";\nimport { mapState } from \"vuex\";\nexport default {\n  data() {\n    const verify_pass = (rule, value, callback) => {\n      if (!checkPassword(value)) {\n        callback(new Error(\"密码格式为8-12位大写、小写英文字母及数字组合\"));\n      } else {\n        callback();\n      }\n    };\n    const verify_repeat = (rule, value, callback) => {\n      if (value !== this.form.password) {\n        callback(new Error(\"两次输入密码不一致\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      status: 0,\n      is_bind_phone: true, //是否绑定手机号\n      isBindPhone: false, //未绑定提示\n      valBefore: \"\", //前置验证码\n      count: 0, //验证码倒计时\n      codeLocal: null,\n      form: {\n        password: \"\",\n        repeat: \"\",\n      },\n      ruleForm: {\n        password: [\n          {\n            required: true,\n            message: this.$t(\"请输入交易密码\"),\n            trigger: \"blur\",\n          },\n          { validator: verify_pass, trigger: \"blur\" },\n        ],\n        repeat: [\n          {\n            required: true,\n            message: this.$t(\"请再次输入交易密码\"),\n            trigger: \"blur\",\n          },\n          { validator: verify_repeat, trigger: \"blur\" },\n        ],\n      },\n      remarkList: [\n        \"交易密码是在交易所进行交易时需要输入密码，不同与登录密码。为确保您的财产安全，请牢记交易密码，防止丢失。\",\n        \"8-12位含大小写字母及数字。\",\n      ],\n    };\n  },\n  computed: {\n    ...mapState([\"current\"]),\n  },\n  watch: {\n    valBefore(val) {\n      if (val.length == 6) {\n        const next = async () => {\n          Toast.loading({\n            message: \"加载中...\",\n            forbidClick: true,\n          });\n          const params = {\n            scene: 4,\n            receiver: this.current.account.phone,\n            code: val,\n          };\n          const result = await VerifyCode(params);\n          const { code } = result;\n          if (code != 200) {\n            this.$toast(result.message);\n            return;\n          }\n          this.status = 1;\n          // setTimeout(() => {\n          // }, 2000);\n        };\n        next();\n      }\n    },\n  },\n  created() {\n    !this.current.account.phone && (this.isBindPhone = true);\n    this.current.account.phone && this.sendAuthCode();\n  },\n  components: {\n    Navigation: (resolve) =>\n      require([\"../../../components/nav/Navigation\"], resolve),\n    Alert: (resolve) => require([\"../../../components/Alert\"], resolve),\n  },\n  methods: {\n    submitSet(formName) {\n      this.$refs[formName].validate(async (res) => {\n        if (res) {\n          console.log(\"验证通过\");\n          const params = {\n            code: this.valBefore,\n            password: this.form.password,\n            password_confirmation: this.form.repeat,\n          };\n          const result = await SetTradePass(params);\n          console.log(result);\n          const { code } = result;\n          if (code != 200) {\n            this.$toast(result.message);\n            return;\n          }\n          this.$toast.success(\"交易密码设置成功\");\n          this.$store.dispatch(\"current/upUserInfo\");\n          this.$router.go(-1);\n        }\n      });\n    },\n    //发送验证验证码\n    async sendAuthCode() {\n      const params = {\n        scene: 4,\n        type: this.current.account.type,\n        email: this.current.account.email,\n        phone: this.current.account.phone,\n        phone_prefix: this.current.account.phone_prefix,\n      };\n      const result = await SendCode(params);\n      const { code } = result;\n      if (code != 200) {\n        this.$toast.fail(result.message);\n      } else {\n        this.count = 60;\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\nh3 {\n  font-size: 22px;\n  color: #333;\n  font-weight: 500;\n}\n.before-remark {\n  font-size: 12px;\n  color: #999;\n  margin-top: 8px;\n  margin-bottom: 40px;\n}\n.trade-before-auth {\n  padding: 30px 12px;\n\n  .send-code {\n    text-align: right;\n    margin-top: 14px;\n    font-size: 14px;\n  }\n  .un-send {\n    color: #2cbc94;\n  }\n}\n.set-trade-password {\n  padding: 30px 12px;\n  /deep/.el-form-item {\n    margin-bottom: 4px;\n  }\n  .trade-remark-box {\n    padding: 12px;\n    background: #eee;\n    border-radius: 4px;\n    margin-top: 22px;\n    ul {\n      li {\n        display: flex;\n        align-items: center;\n        .remark-point {\n          min-width: 5px;\n          height: 5px;\n          border-radius: 50%;\n          background: #999;\n          margin-right: 8px;\n        }\n        p:last-child {\n          font-size: 12px;\n          color: #999;\n        }\n      }\n      li:last-child {\n        margin-top: 12px;\n      }\n    }\n  }\n  .btn-primary {\n    margin-top: 22px;\n  }\n}\n</style>"]}]}