{"remainingRequest":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!/Users/tql_yy/Documents/code/use_one/src/views/order/HasEnded.vue?vue&type=style&index=0&id=477ccbca&lang=less&scoped=true&","dependencies":[{"path":"/Users/tql_yy/Documents/code/use_one/src/views/order/HasEnded.vue","mtime":1657511087068},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":1655715156000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js","mtime":1657523213663},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci52YW4tc3RpY2t5IHsKICAgIGhlaWdodDogNDZweDsKICAgIC52YW4tQ29udGFpbmVyIHsKICAgICAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgcGFkZGluZzogMHB4IDEycHg7CiAgICAgICAgdG9wOiA0NnB4OwogICAgICAgIGJhY2tncm91bmQ6ICNmZmY7CiAgICAgICAgei1pbmRleDogMTsKICAgIH0KfQoKLm5hdi1jb250YWluZXIgewogICAgLm9uZ29pbmcsCiAgICAuaGFzRW5kZWQgewogICAgICAgIGZvbnQtc2l6ZTogMTRweDsKICAgICAgICBjb2xvcjogIzk5OTk5OTsKICAgICAgICBwYWRkaW5nOiAwcHggOHB4OwogICAgICAgICYuYWN0aXZlIHsKICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4OwogICAgICAgICAgICBjb2xvcjogIzMzMzMzMzsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["HasEnded.vue"],"names":[],"mappings":";AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HasEnded.vue","sourceRoot":"src/views/order","sourcesContent":["<!--\n * @Name: 订单列表已结束\n * @Date: 2022-06-20 09:37:14\n * @LastEditors: VSCode\n * @LastEditTime: 2022-07-03 18:29:42\n-->\n<template>\n    <P-main>\n        <div>\n            <P-nav left-arrow :border=\"false\" :fixed=\"true\" :placeholder=\"true\">\n                <template #title>\n                    <div class=\"nav-container ui-flex-row\">\n                        <B-a class=\"ongoing\" href=\"/order\">进行中</B-a>\n                        <div class=\"hasEnded active\">已结束</div>\n                    </div>\n                </template>\n            </P-nav>\n            <div class=\"van-sticky\">\n                <div class=\"van-Container\">\n                    <P-tabs v-model=\"tabs.active\" :list=\"tabs.list\"></P-tabs>\n                </div>\n            </div>\n        </div>\n\n        <P-body type=\"Fei\">\n            <P-tabs-container v-model=\"tabs.active\" :list=\"tabs.list\">\n                <IWantToBuy></IWantToBuy>\n            </P-tabs-container>\n        </P-body>\n    </P-main>\n</template>\n\n<script>\nexport default {\n    components: {\n        IWantToBuy: () => import(\"./components/IWantToBuy\"),\n    },\n    data() {\n        return {\n            tabs: {\n                active: 0,\n                list: [\n                    { name: '全部', badge: '9', scroll: '' },\n                    { name: '已完成', badge: '199', scroll: '' },\n                    { name: '已取消', scroll: '' }\n                ],\n            },\n            headNav: {\n                active: 0,\n                scroll: [0, 0]\n            },\n        }\n    },\n    watch: {\n        'tabs.active'(now, before) {\n            let scroll = this.tabs.list[now].scroll\n            if (scroll != '') {\n                this.scrollTop(scroll)\n            } else {\n                this.scrollTop(0)\n            }\n        }\n    },\n    computed: {\n\n    },\n    created() {\n\n    },\n    mounted() {\n        window.addEventListener('scroll', this.handleScroll)\n    },\n    methods: {\n        handleScroll() {\n            this.scroll = document.documentElement.scrollTop || document.body.scrollTop\n            let { active, list } = this.tabs\n            list[active].scroll = this.scroll\n        },\n        scrollTop(value) {\n            this.$nextTick(() => {\n                document.body.scrollTop = value\n                document.documentElement.scrollTop = value\n            })\n        }\n    },\n    destroyed() {\n        window.removeEventListener('scroll', this.handleScroll)\n    },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.van-sticky {\n    height: 46px;\n    .van-Container {\n        position: fixed;\n        width: 100%;\n        padding: 0px 12px;\n        top: 46px;\n        background: #fff;\n        z-index: 1;\n    }\n}\n\n.nav-container {\n    .ongoing,\n    .hasEnded {\n        font-size: 14px;\n        color: #999999;\n        padding: 0px 8px;\n        &.active {\n            font-size: 18px;\n            color: #333333;\n        }\n    }\n}\n</style>"]}]}