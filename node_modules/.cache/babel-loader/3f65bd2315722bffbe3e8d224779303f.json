{"remainingRequest":"/Users/tql_yy/Documents/code/use_one/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js!/Users/tql_yy/Documents/code/use_one/src/store/modules/registered.js","dependencies":[{"path":"/Users/tql_yy/Documents/code/use_one/src/store/modules/registered.js","mtime":1657511087063},{"path":"/Users/tql_yy/Documents/code/use_one/babel.config.js","mtime":1657511087035},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7Cgp2YXIgX3VzZXIgPSByZXF1aXJlKCJAL2FwaS91c2VyLyIpOwoKLyoKICogQE5hbWU6IOeUqOaIt+azqOWGjC1TdG9yZQogKiBARGF0ZTogMjAyMi0wNC0yMSAxMzo1NTo0NAogKiBATGFzdEVkaXRvcnM6IFZTQ29kZQogKiBATGFzdEVkaXRUaW1lOiAyMDIyLTA2LTI5IDE3OjA5OjIwCiAqLwpjb25zdCBzdGF0ZSA9IHsKICBjb3VudHJ5OiBbXQp9Owpjb25zdCBtdXRhdGlvbnMgPSB7CiAgU0VUX0NPVU5UUlk6IChzdGF0ZSwgbGlzdCkgPT4gewogICAgc3RhdGUuY291bnRyeSA9IGxpc3Q7CiAgfQp9Owpjb25zdCBhY3Rpb25zID0gewogIC8v5Zu95a625Y+356CB5L+h5oGvCiAgY291bnRyeSh7CiAgICBjb21taXQsCiAgICBzdGF0ZQogIH0pIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgIGlmIChzdGF0ZS5jb3VudHJ5Lmxlbmd0aCA8IDEpIHsKICAgICAgICAoMCwgX3VzZXIuY291bnRyeSkoKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgIGxldCB7CiAgICAgICAgICAgIGNvZGUsCiAgICAgICAgICAgIGRhdGEKICAgICAgICAgIH0gPSByZXNwb25zZTsKCiAgICAgICAgICBpZiAoY29kZSA9PSAyMDApIHsKICAgICAgICAgICAgY29tbWl0KCdTRVRfQ09VTlRSWScsIGRhdGEubGlzdCk7CiAgICAgICAgICB9CgogICAgICAgICAgcmVzb2x2ZShkYXRhLmxpc3QpOwogICAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVzb2x2ZShzdGF0ZS5jb3VudHJ5KTsKICAgICAgfQogICAgfSk7CiAgfSwKCiAgLy/mo4Dmn6XmiYvmnLrlj7cv6YKu566x5piv5ZCm6KKr5Y2g55SoCiAgY2hlY2tBdmFpbGFibGUoewogICAgY29tbWl0LAogICAgc3RhdGUKICB9LCBwYXJhbXMpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgICgwLCBfdXNlci5jaGVja0F2YWlsYWJsZSkocGFyYW1zKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKCiAgLy/lj5HpgIHpqozor4HnoIEKICBzZW5kQ29kZSh7CiAgICBjb21taXQsCiAgICBzdGF0ZQogIH0sIHBhcmFtcykgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgKDAsIF91c2VyLnNlbmRDb2RlKShwYXJhbXMpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAoKICAvL+ajgOafpemqjOivgeeggQogIGNoZWNrQ29kZSh7CiAgICBjb21taXQsCiAgICBzdGF0ZQogIH0sIHBhcmFtcykgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgKDAsIF91c2VyLmNoZWNrQ29kZSkocGFyYW1zKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKCiAgLy/ms6jlhozotKblj7cKICByZWdpc3Rlcih7CiAgICBjb21taXQsCiAgICBzdGF0ZQogIH0sIHBhcmFtcykgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgKDAsIF91c2VyLnJlZ2lzdGVyKShwYXJhbXMpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAoKICAvL+aJvuWbnuWvhueggQogIGZvcmdldCh7CiAgICBjb21taXQsCiAgICBzdGF0ZQogIH0sIHBhcmFtcykgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgKDAsIF91c2VyLmZvcmdldCkocGFyYW1zKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSk7CiAgfQoKfTsKdmFyIF9kZWZhdWx0ID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGUsCiAgbXV0YXRpb25zLAogIGFjdGlvbnMKfTsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},{"version":3,"names":["state","country","mutations","SET_COUNTRY","list","actions","commit","Promise","resolve","reject","length","then","response","code","data","catch","error","checkAvailable","params","sendCode","checkCode","register","forget","namespaced"],"sources":["/Users/tql_yy/Documents/code/use_one/src/store/modules/registered.js"],"sourcesContent":["/*\n * @Name: 用户注册-Store\n * @Date: 2022-04-21 13:55:44\n * @LastEditors: VSCode\n * @LastEditTime: 2022-06-29 17:09:20\n */\nimport { checkAvailable, country, sendCode, checkCode, register, forget } from '@/api/user/'\n\nconst state = {\n    country: []\n}\n\nconst mutations = {\n    SET_COUNTRY: (state, list) => {\n        state.country = list\n    }\n}\n\nconst actions = {\n    //国家号码信息\n    country({ commit, state }) {\n        return new Promise((resolve, reject) => {\n            if (state.country.length < 1) {\n                country().then(response => {\n                    let { code, data } = response\n                    if (code == 200) {\n                        commit('SET_COUNTRY', data.list)\n                    }\n                    resolve(data.list)\n                }).catch(error => {\n                    reject(error)\n                })\n            } else {\n                resolve(state.country)\n            }\n        })\n    },\n    //检查手机号/邮箱是否被占用\n    checkAvailable({ commit, state }, params) {\n        return new Promise((resolve, reject) => {\n            checkAvailable(params).then(response => {\n                resolve(response)\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n    //发送验证码\n    sendCode({ commit, state }, params) {\n        return new Promise((resolve, reject) => {\n            sendCode(params).then(response => {\n                resolve(response)\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n    //检查验证码\n    checkCode({ commit, state }, params) {\n        return new Promise((resolve, reject) => {\n            checkCode(params).then(response => {\n                resolve(response)\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n    //注册账号\n    register({ commit, state }, params) {\n        return new Promise((resolve, reject) => {\n            register(params).then(response => {\n                resolve(response)\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n    //找回密码\n    forget({ commit, state }, params) {\n        return new Promise((resolve, reject) => {\n            forget(params).then(response => {\n                resolve(response)\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n}\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions\n}"],"mappings":"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"}]}