{"remainingRequest":"/Users/tql_yy/Documents/code/use_one/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js!/Users/tql_yy/Documents/code/use_one/src/store/modules/registered.js","dependencies":[{"path":"/Users/tql_yy/Documents/code/use_one/src/store/modules/registered.js","mtime":1657511087063},{"path":"/Users/tql_yy/Documents/code/use_one/babel.config.js","mtime":1657511087035},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tql_yy/Documents/code/use_one/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoKICogQE5hbWU6IOeUqOaIt+azqOWGjC1TdG9yZQogKiBARGF0ZTogMjAyMi0wNC0yMSAxMzo1NTo0NAogKiBATGFzdEVkaXRvcnM6IFZTQ29kZQogKiBATGFzdEVkaXRUaW1lOiAyMDIyLTA2LTI5IDE3OjA5OjIwCiAqLwppbXBvcnQgeyBjaGVja0F2YWlsYWJsZSwgY291bnRyeSwgc2VuZENvZGUsIGNoZWNrQ29kZSwgcmVnaXN0ZXIsIGZvcmdldCB9IGZyb20gJ0AvYXBpL3VzZXIvJzsKY29uc3Qgc3RhdGUgPSB7CiAgY291bnRyeTogW10KfTsKY29uc3QgbXV0YXRpb25zID0gewogIFNFVF9DT1VOVFJZOiAoc3RhdGUsIGxpc3QpID0+IHsKICAgIHN0YXRlLmNvdW50cnkgPSBsaXN0OwogIH0KfTsKY29uc3QgYWN0aW9ucyA9IHsKICAvL+WbveWutuWPt+eggeS/oeaBrwogIGNvdW50cnkoewogICAgY29tbWl0LAogICAgc3RhdGUKICB9KSB7CiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICBpZiAoc3RhdGUuY291bnRyeS5sZW5ndGggPCAxKSB7CiAgICAgICAgY291bnRyeSgpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgbGV0IHsKICAgICAgICAgICAgY29kZSwKICAgICAgICAgICAgZGF0YQogICAgICAgICAgfSA9IHJlc3BvbnNlOwoKICAgICAgICAgIGlmIChjb2RlID09IDIwMCkgewogICAgICAgICAgICBjb21taXQoJ1NFVF9DT1VOVFJZJywgZGF0YS5saXN0KTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXNvbHZlKGRhdGEubGlzdCk7CiAgICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXNvbHZlKHN0YXRlLmNvdW50cnkpOwogICAgICB9CiAgICB9KTsKICB9LAoKICAvL+ajgOafpeaJi+acuuWPty/pgq7nrrHmmK/lkKbooqvljaDnlKgKICBjaGVja0F2YWlsYWJsZSh7CiAgICBjb21taXQsCiAgICBzdGF0ZQogIH0sIHBhcmFtcykgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgY2hlY2tBdmFpbGFibGUocGFyYW1zKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKCiAgLy/lj5HpgIHpqozor4HnoIEKICBzZW5kQ29kZSh7CiAgICBjb21taXQsCiAgICBzdGF0ZQogIH0sIHBhcmFtcykgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgc2VuZENvZGUocGFyYW1zKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKCiAgLy/mo4Dmn6Xpqozor4HnoIEKICBjaGVja0NvZGUoewogICAgY29tbWl0LAogICAgc3RhdGUKICB9LCBwYXJhbXMpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgIGNoZWNrQ29kZShwYXJhbXMpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAoKICAvL+azqOWGjOi0puWPtwogIHJlZ2lzdGVyKHsKICAgIGNvbW1pdCwKICAgIHN0YXRlCiAgfSwgcGFyYW1zKSB7CiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICByZWdpc3RlcihwYXJhbXMpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAoKICAvL+aJvuWbnuWvhueggQogIGZvcmdldCh7CiAgICBjb21taXQsCiAgICBzdGF0ZQogIH0sIHBhcmFtcykgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgZm9yZ2V0KHBhcmFtcykudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7CiAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICB9KTsKICAgIH0pOwogIH0KCn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlLAogIG11dGF0aW9ucywKICBhY3Rpb25zCn07"},{"version":3,"names":["checkAvailable","country","sendCode","checkCode","register","forget","state","mutations","SET_COUNTRY","list","actions","commit","Promise","resolve","reject","length","then","response","code","data","catch","error","params","namespaced"],"sources":["/Users/tql_yy/Documents/code/use_one/src/store/modules/registered.js"],"sourcesContent":["/*\n * @Name: 用户注册-Store\n * @Date: 2022-04-21 13:55:44\n * @LastEditors: VSCode\n * @LastEditTime: 2022-06-29 17:09:20\n */\nimport { checkAvailable, country, sendCode, checkCode, register, forget } from '@/api/user/'\n\nconst state = {\n    country: []\n}\n\nconst mutations = {\n    SET_COUNTRY: (state, list) => {\n        state.country = list\n    }\n}\n\nconst actions = {\n    //国家号码信息\n    country({ commit, state }) {\n        return new Promise((resolve, reject) => {\n            if (state.country.length < 1) {\n                country().then(response => {\n                    let { code, data } = response\n                    if (code == 200) {\n                        commit('SET_COUNTRY', data.list)\n                    }\n                    resolve(data.list)\n                }).catch(error => {\n                    reject(error)\n                })\n            } else {\n                resolve(state.country)\n            }\n        })\n    },\n    //检查手机号/邮箱是否被占用\n    checkAvailable({ commit, state }, params) {\n        return new Promise((resolve, reject) => {\n            checkAvailable(params).then(response => {\n                resolve(response)\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n    //发送验证码\n    sendCode({ commit, state }, params) {\n        return new Promise((resolve, reject) => {\n            sendCode(params).then(response => {\n                resolve(response)\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n    //检查验证码\n    checkCode({ commit, state }, params) {\n        return new Promise((resolve, reject) => {\n            checkCode(params).then(response => {\n                resolve(response)\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n    //注册账号\n    register({ commit, state }, params) {\n        return new Promise((resolve, reject) => {\n            register(params).then(response => {\n                resolve(response)\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n    //找回密码\n    forget({ commit, state }, params) {\n        return new Promise((resolve, reject) => {\n            forget(params).then(response => {\n                resolve(response)\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n}\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAT,EAAyBC,OAAzB,EAAkCC,QAAlC,EAA4CC,SAA5C,EAAuDC,QAAvD,EAAiEC,MAAjE,QAA+E,aAA/E;AAEA,MAAMC,KAAK,GAAG;EACVL,OAAO,EAAE;AADC,CAAd;AAIA,MAAMM,SAAS,GAAG;EACdC,WAAW,EAAE,CAACF,KAAD,EAAQG,IAAR,KAAiB;IAC1BH,KAAK,CAACL,OAAN,GAAgBQ,IAAhB;EACH;AAHa,CAAlB;AAMA,MAAMC,OAAO,GAAG;EACZ;EACAT,OAAO,CAAC;IAAEU,MAAF;IAAUL;EAAV,CAAD,EAAoB;IACvB,OAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpC,IAAIR,KAAK,CAACL,OAAN,CAAcc,MAAd,GAAuB,CAA3B,EAA8B;QAC1Bd,OAAO,GAAGe,IAAV,CAAeC,QAAQ,IAAI;UACvB,IAAI;YAAEC,IAAF;YAAQC;UAAR,IAAiBF,QAArB;;UACA,IAAIC,IAAI,IAAI,GAAZ,EAAiB;YACbP,MAAM,CAAC,aAAD,EAAgBQ,IAAI,CAACV,IAArB,CAAN;UACH;;UACDI,OAAO,CAACM,IAAI,CAACV,IAAN,CAAP;QACH,CAND,EAMGW,KANH,CAMSC,KAAK,IAAI;UACdP,MAAM,CAACO,KAAD,CAAN;QACH,CARD;MASH,CAVD,MAUO;QACHR,OAAO,CAACP,KAAK,CAACL,OAAP,CAAP;MACH;IACJ,CAdM,CAAP;EAeH,CAlBW;;EAmBZ;EACAD,cAAc,CAAC;IAAEW,MAAF;IAAUL;EAAV,CAAD,EAAoBgB,MAApB,EAA4B;IACtC,OAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpCd,cAAc,CAACsB,MAAD,CAAd,CAAuBN,IAAvB,CAA4BC,QAAQ,IAAI;QACpCJ,OAAO,CAACI,QAAD,CAAP;MACH,CAFD,EAEGG,KAFH,CAESC,KAAK,IAAI;QACdP,MAAM,CAACO,KAAD,CAAN;MACH,CAJD;IAKH,CANM,CAAP;EAOH,CA5BW;;EA6BZ;EACAnB,QAAQ,CAAC;IAAES,MAAF;IAAUL;EAAV,CAAD,EAAoBgB,MAApB,EAA4B;IAChC,OAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpCZ,QAAQ,CAACoB,MAAD,CAAR,CAAiBN,IAAjB,CAAsBC,QAAQ,IAAI;QAC9BJ,OAAO,CAACI,QAAD,CAAP;MACH,CAFD,EAEGG,KAFH,CAESC,KAAK,IAAI;QACdP,MAAM,CAACO,KAAD,CAAN;MACH,CAJD;IAKH,CANM,CAAP;EAOH,CAtCW;;EAuCZ;EACAlB,SAAS,CAAC;IAAEQ,MAAF;IAAUL;EAAV,CAAD,EAAoBgB,MAApB,EAA4B;IACjC,OAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpCX,SAAS,CAACmB,MAAD,CAAT,CAAkBN,IAAlB,CAAuBC,QAAQ,IAAI;QAC/BJ,OAAO,CAACI,QAAD,CAAP;MACH,CAFD,EAEGG,KAFH,CAESC,KAAK,IAAI;QACdP,MAAM,CAACO,KAAD,CAAN;MACH,CAJD;IAKH,CANM,CAAP;EAOH,CAhDW;;EAiDZ;EACAjB,QAAQ,CAAC;IAAEO,MAAF;IAAUL;EAAV,CAAD,EAAoBgB,MAApB,EAA4B;IAChC,OAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpCV,QAAQ,CAACkB,MAAD,CAAR,CAAiBN,IAAjB,CAAsBC,QAAQ,IAAI;QAC9BJ,OAAO,CAACI,QAAD,CAAP;MACH,CAFD,EAEGG,KAFH,CAESC,KAAK,IAAI;QACdP,MAAM,CAACO,KAAD,CAAN;MACH,CAJD;IAKH,CANM,CAAP;EAOH,CA1DW;;EA2DZ;EACAhB,MAAM,CAAC;IAAEM,MAAF;IAAUL;EAAV,CAAD,EAAoBgB,MAApB,EAA4B;IAC9B,OAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpCT,MAAM,CAACiB,MAAD,CAAN,CAAeN,IAAf,CAAoBC,QAAQ,IAAI;QAC5BJ,OAAO,CAACI,QAAD,CAAP;MACH,CAFD,EAEGG,KAFH,CAESC,KAAK,IAAI;QACdP,MAAM,CAACO,KAAD,CAAN;MACH,CAJD;IAKH,CANM,CAAP;EAOH;;AApEW,CAAhB;AAuEA,eAAe;EACXE,UAAU,EAAE,IADD;EAEXjB,KAFW;EAGXC,SAHW;EAIXG;AAJW,CAAf"}]}